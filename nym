#!/bin/bash
[ -z $EDITOR ] && export editor="vi" || export editor=$EDITOR
nym_root="${HOME}/.nym"
mkdir -p "${nym_root}" 2>/dev/null

nym_populate_config() {
  touch "$nym_root/config"
  cat > "$nym_root/config" <<CONFIG
## This file gets evÐ°lled, so no spaces near =
nym_security="plain" #level "gpg" is not implemented yet
CONFIG
}

nym_add() {
  # adds a new person
  [ -z $1 ] && echo "To add someone you need to know at least one name of the person." 1>&2 && return 1
  echo "[person:$*]" | tee -a "$nym_root/data"
  echo "handles:$(printf "%s," "$*")" | tee -a "$nym_root/data"
}

nym_alias() {
  # finds an alias and adds another alias to the list of aliases
  [ -z "$1" ] && echo "Say whaaat?" 1>&2 && return 1
  if [ -z "$(grep "$1" "$nym_root/data" | grep "$2" "$nym_root/data" )" ]; then
    echo "sed -i \"s/$1,/&$2,/\" $nym_root/data" 1>&2
    sed -i "s/$1,/&$2,/" $nym_root/data
  else
    echo "I already know that $2 is alias of $1!" && return 1
  fi
}

nym_info() {
  # appends a piece of data about the person to a field, creating it if needed
  echo "Some fucked up awk action is needed here and I'm not in the mood." 2>&1
  return 1
}

[ -f "${nym_root}/config" ] || ( nym_populate_config && $editor "${nym_root}/config" )
eval "$(cat ${nym_root}/config)"

[ -z "$1" ] && echo "Configuration file is already there. Nothing to do." && exit 1 
nym_verbs=('add' 'alias' 'info')
for verb in ${nym_verbs[@]}; do
  if [ "$1" == $verb ]; then
    shift 
    nym_$verb "$@"
    exit 0
  fi
done
cat <<USAGE
nym, the identity manager.

To initialize nym config and .nym directory just run "nym".

Verbs:

 + add name:           adds a new person
 + alias name aka:     adds aka as an alternative pseudonym of person named 'name'
 + info field value:   appends value to field of a person. eg "nym info email ex@mple.com"
USAGE
